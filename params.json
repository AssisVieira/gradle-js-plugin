{"name":"Gradle JavaScript Plugin","body":"# Quick Start #\r\nWrangling your JS in a [Gradle](http://gradle.org) build is easy! Just add this to your *build.gradle* file:\r\n\r\n```groovy\r\n// Pull the plugin from a Maven Repo\r\nbuildscript {\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n        classpath 'com.eriwen:gradle-js-plugin:0.4'\r\n    }\r\n}\r\n// Invoke the plugin\r\napply plugin: 'js'\r\n\r\n// Specify a collection of files to be combined, then minified and finally GZip compressed.\r\ntask combinejs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {\r\n\tsource = [\"${projectDir}/js/file1.js\", \"${projectDir}/js/file2.js\"]\r\n\tdest = file(\"${buildDir}/all.js\")\r\n}\r\n\r\ntask minifyjs(type: com.eriwen.gradle.js.tasks.MinifyJsTask, dependsOn: 'combinejs') {\r\n\tsource = file(\"${buildDir}/all.js\")\r\n\tdest = file(\"${buildDir}/all-min.js\")\r\n\twarningLevel = 'QUIET'\r\n}\r\n\r\ntask gzipjs(type: com.eriwen.gradle.js.tasks.GzipJsTask, dependsOn: 'minifyjs') {\r\n\tsource = file(\"${buildDir}/all-min.js\")\r\n\tdest = file(\"${buildDir}/all-min.js\")\r\n}\r\n```\r\n\r\n**Need more than 1 set of files generated? We'll have to declare our tasks a bit differently:**\r\n\r\n```groovy\r\ntask jsDev(type: com.eriwen.gradle.js.tasks.JsTask) {\r\n    source = [\"${projectDir}/js/file1.js\", \"${projectDir}/js/file2.js\"]\r\n    dest = file(\"${buildDir}/all-debug.js\")\r\n    compilationLevel = 'WHITESPACE_ONLY'\r\n}\r\n\r\ntask jsProd(type: com.eriwen.gradle.js.tasks.JsTask) {\r\n    source = [\"${projectDir}/js/file1.js\", \"${projectDir}/js/file2.js\"]\r\n    dest = file(\"${buildDir}/all.js\")\r\n}\r\n```\r\n\r\n**[JSHint](http://jshint.com) support**\r\n\r\n```groovy\r\ntask jshintjs(type: com.eriwen.gradle.js.tasks.JsHintTask) {\r\n    source = ['js/main.js']\r\n}\r\n```\r\n\r\n**[JSDoc 3](https://github.com/micmath/jsdoc) support**\r\n```groovy\r\ntask jsdocjs(type: com.eriwen.gradle.js.tasks.JsDocTask) {\r\n    source = [\"${projectDir}/js/file1.js\", \"${projectDir}/js/file2.js\"]\r\n    destinationDir = file(\"${buildDir}/jsdoc\")\r\n    options = []\r\n}\r\n```\r\n\r\n**[props2Js](https://github.com/nzakas/props2js) support**\r\n```groovy\r\ntask props(type: com.eriwen.gradle.js.tasks.Props2JsTask) {\r\n    propertiesFile = file(\"${projectDir}/src/test/resources/test.properties\")\r\n    dest = file(\"${buildDir}/props.jsonp\")\r\n    type = 'jsonp'\r\n    functionName = 'fn'\r\n}\r\n```\r\n\r\n# Available Tasks and Options #\r\n### combineJs ###\r\n- source = [FileCollection](http://gradle.org/current/docs/javadoc/org/gradle/api/file/FileCollection.html) of files to merge\r\n- dest = File for combined output\r\n\r\n### minifyJs (Uses the [Google Closure Compiler](http://code.google.com/closure/compiler/)) ###\r\n- source = File to minify\r\n- dest = File for minified output\r\n- *(Optional)* compilationLevel = 'WHITESPACE_ONLY', 'SIMPLE_OPTIMIZATIONS' (default), or 'ADVANCED_OPTIMIZATIONS' (are you *hardcore*?)\r\n- *(Optional)* warningLevel = 'QUIET', 'DEFAULT' (default), or 'VERBOSE'\r\n- *(Optional)* compilerOptions = [CompilerOptions](http://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/javascript/jscomp/CompilerOptions.java?r=1187) object\r\n\r\n### gzipJs ###\r\n- source = File to compress\r\n- dest = File for compressed output\r\n\r\n### js (DEPRECATED, will be removed in v0.5) ###\r\n- inputs.files Files to combine, minify and gzip\r\n- optputs.files File for tiny output :)\r\n- *(Optional)* compilationLevel = 'WHITESPACE_ONLY', 'SIMPLE_OPTIMIZATIONS' (default), or 'ADVANCED_OPTIMIZATIONS' (are you *hardcore*?)\r\n- *(Optional)* warningLevel = 'QUIET', 'DEFAULT' (default), or 'VERBOSE'\r\n- *(Optional)* compilerOptions = [CompilerOptions](http://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/javascript/jscomp/CompilerOptions.java?r=1187) object\r\n\r\n### jshint ###\r\n- source = Files to assess with JSHint\r\n\r\n### jsdoc ###\r\n- source = Files to generate documentation for\r\n- destinationDir = Directory path to put JSDoc output\r\n- *(Optional)* options = []\r\n\r\n```\r\nJSDoc 3 options:\r\n-t or --template <value> The name of the template to use. Default: the \"default\" template\r\n-c or --configure <value> The path to the configuration file. Default: jsdoc __dirname + /conf.json\r\n-e or --encoding <value> Assume this encoding when reading all source files. Default: utf-8\r\n-T or --test Run all tests and quit.\r\n-d or --destination <value> The path to the output folder. Use \"console\" to dump data to the console. Default: console\r\n-p or --private Display symbols marked with the @private tag. Default: false.\r\n-r or --recurse Recurse into subdirectories when scanning for source code files.\r\n-h or --help Print this message and quit.\r\n-X or --explain Dump all found doclet internals to console and quit.\r\n-q or --query <value> Provide a querystring to define custom variable names/values to add to the options hash.\r\n-u or --tutorials <value> Directory in which JSDoc should search for tutorials.\r\n```\r\n\r\n### props2js ###\r\n- propertiesFile = Properties file to process\r\n- dest = Destination file for output\r\n- type = One of: 'js', 'json', or 'jsonp'\r\n- *(Optional)* functionName = Function name to wrap JSONP\r\n\r\nWhat, you want more? [Tell me then!](https://github.com/eriwen/gradle-js-plugin/issues)\r\n\r\n# See Also #\r\nThe [Gradle CSS Plugin](https://github.com/eriwen/gradle-css-plugin)!\r\n\r\n<a href=\"https://twitter.com/eriwen\" class=\"twitter-follow-button\" data-show-count=\"false\">Follow @eriwen</a>","tagline":"Gradle plugin for working with JS","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}