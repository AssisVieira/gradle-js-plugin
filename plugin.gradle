buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.0.4'
    }
}
buildscript {
    configurations.classpath.resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'js'

javascript.source {
    custom {
        js {
            srcDir "src/test/resources"
            include "file*.js"
        }
    }
}

task clean(type: Delete) {
    delete buildDir
}

// Combine JS files
task combine(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = javascript.source.custom.js.files
    dest = "${buildDir}/all.js"
}

// Minify with Google Closure Compiler
task minify(type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
    source = combine
    dest = file("${buildDir}/all-min.js")
    closure {
        warningLevel = 'VERBOSE'
        compilationLevel = 'SIMPLE_OPTIMIZATIONS'
        externs = files("src/test/resources/externs.js")
    }
}

// For auto-versioning
//def version = Integer.toHexString(Integer.parseInt(new java.text.SimpleDateFormat('yyDDHHmm').format(new Date())))
def version = "1.7.2"

// GZip it!
task gzip(type: com.eriwen.gradle.js.tasks.GzipJsTask) {
    source = minify
    dest = "${buildDir}/all-${version}.min.js"
}

jshint {
    source = javascript.source.custom.js.files
    dest = "${buildDir}/jshint.out"
}

task jshintz(type: com.eriwen.gradle.js.tasks.JsHintTask) {
    source = javascript.source.custom.js.files
    dest = "${buildDir}/jshint.out"
}

task jsdocz(type: com.eriwen.gradle.js.tasks.JsDocTask) {
    source = javascript.source.custom.js.files
    destinationDir = "${buildDir}/jsdoc"
}

task props(type: com.eriwen.gradle.js.tasks.Props2JsTask) {
    source = file("${projectDir}/src/test/resources/test.properties")
    dest = file("${buildDir}/props.jsonp")
    project.props.type = 'jsonp'
    project.props.functionName = 'fn'
}
